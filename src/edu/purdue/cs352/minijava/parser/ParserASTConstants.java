/* Generated By:JavaCC: Do not edit this line. ParserASTConstants.java */
package edu.purdue.cs352.minijava.parser;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface ParserASTConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int KW_CLASS = 8;
  /** RegularExpression Id. */
  int KW_PUBLIC = 9;
  /** RegularExpression Id. */
  int KW_STATIC = 10;
  /** RegularExpression Id. */
  int KW_VOID = 11;
  /** RegularExpression Id. */
  int KW_MAIN = 12;
  /** RegularExpression Id. */
  int KW_STRING = 13;
  /** RegularExpression Id. */
  int KW_EXTENDS = 14;
  /** RegularExpression Id. */
  int KW_RETURN = 15;
  /** RegularExpression Id. */
  int KW_INT = 16;
  /** RegularExpression Id. */
  int KW_BOOLEAN = 17;
  /** RegularExpression Id. */
  int KW_IF = 18;
  /** RegularExpression Id. */
  int KW_ELSE = 19;
  /** RegularExpression Id. */
  int KW_WHILE = 20;
  /** RegularExpression Id. */
  int KW_TRUE = 21;
  /** RegularExpression Id. */
  int KW_FALSE = 22;
  /** RegularExpression Id. */
  int KW_THIS = 23;
  /** RegularExpression Id. */
  int KW_NEW = 24;
  /** RegularExpression Id. */
  int KW_PRINT = 25;
  /** RegularExpression Id. */
  int SYM_LBRACE = 26;
  /** RegularExpression Id. */
  int SYM_RBRACE = 27;
  /** RegularExpression Id. */
  int SYM_LPAREN = 28;
  /** RegularExpression Id. */
  int SYM_RPAREN = 29;
  /** RegularExpression Id. */
  int SYM_LSQPAREN = 30;
  /** RegularExpression Id. */
  int SYM_RSQPAREN = 31;
  /** RegularExpression Id. */
  int SYM_SEMICOLON = 32;
  /** RegularExpression Id. */
  int SYM_EQUAL = 33;
  /** RegularExpression Id. */
  int SYM_AMPAMP = 34;
  /** RegularExpression Id. */
  int SYM_BARBAR = 35;
  /** RegularExpression Id. */
  int SYM_LESS = 36;
  /** RegularExpression Id. */
  int SYM_LESSEQUAL = 37;
  /** RegularExpression Id. */
  int SYM_EQUALEQUAL = 38;
  /** RegularExpression Id. */
  int SYM_EXCLEQUAL = 39;
  /** RegularExpression Id. */
  int SYM_MORE = 40;
  /** RegularExpression Id. */
  int SYM_MOREEQUAL = 41;
  /** RegularExpression Id. */
  int SYM_PLUS = 42;
  /** RegularExpression Id. */
  int SYM_MINUS = 43;
  /** RegularExpression Id. */
  int SYM_STAR = 44;
  /** RegularExpression Id. */
  int SYM_SLASH = 45;
  /** RegularExpression Id. */
  int SYM_PERCENT = 46;
  /** RegularExpression Id. */
  int SYM_EXCL = 47;
  /** RegularExpression Id. */
  int SYM_DOT = 48;
  /** RegularExpression Id. */
  int SYM_COMMA = 49;
  /** RegularExpression Id. */
  int IDENTIFIER = 50;
  /** RegularExpression Id. */
  int INT_LITERAL = 51;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\f\"",
    "\"\\r\"",
    "<token of kind 6>",
    "<token of kind 7>",
    "\"class\"",
    "\"public\"",
    "\"static\"",
    "\"void\"",
    "\"main\"",
    "\"String\"",
    "\"extends\"",
    "\"return\"",
    "\"int\"",
    "\"boolean\"",
    "\"if\"",
    "\"else\"",
    "\"while\"",
    "\"true\"",
    "\"false\"",
    "\"this\"",
    "\"new\"",
    "\"System.out.println\"",
    "\"{\"",
    "\"}\"",
    "\"(\"",
    "\")\"",
    "\"[\"",
    "\"]\"",
    "\";\"",
    "\"=\"",
    "\"&&\"",
    "\"||\"",
    "\"<\"",
    "\"<=\"",
    "\"==\"",
    "\"!=\"",
    "\">\"",
    "\">=\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"%\"",
    "\"!\"",
    "\".\"",
    "\",\"",
    "<IDENTIFIER>",
    "<INT_LITERAL>",
  };

}
